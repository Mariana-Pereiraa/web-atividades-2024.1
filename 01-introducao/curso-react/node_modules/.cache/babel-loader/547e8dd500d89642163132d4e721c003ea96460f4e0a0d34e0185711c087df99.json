{"ast":null,"code":"var _jsxFileName = \"/home/mariana/Documentos/ufc 2024.1/web/estudoProva/web-atividades-2024.1/01-introducao/src/components/Prova/Questao03/questao03.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questao03 = () => {\n  _s();\n  // estado para armazenar as capitais\n  const [capitais, setCapitais] = useState({\n    menor: '',\n    maior: ''\n  });\n  useEffect(() => {\n    const fetchCapitais = async () => {\n      try {\n        const response = await fetch(\"https://restcountries.com/v3.1/region/europe?fields=capital,population\");\n        if (!response.ok) throw new Error('Erro na requisição');\n        const data = await response.json();\n\n        //filtra países sem capital capital e organiza em ordem crescente\n        const orderData = data.filter(({\n          capital\n        }) => capital) //garante q país tenha uma capital\n        .sort((a, b) => a.population - b.population); //ordena os países\n\n        //atualiza o estado com as capitais de menor e maior população\n        if (orderData.length > 0) {\n          setCapitais({\n            menor: orderData[0].capital[0],\n            //primeira posição após ordenas: menor\n            maior: orderData[orderData.length - 1].capital[0] //última posi~]ao após ordenas : maior \n          });\n        } else {\n          setCapitais({\n            menor: 'Nenhuma',\n            maior: 'Nenhuma'\n          });\n        }\n      } catch (error) {\n        console.error('Erro ao buscar capitais');\n      }\n    };\n\n    //executa a busca de dados\n    fetchCapitais();\n\n    //aray vazio indica que o efeito será executado só uma vez \n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quest\\xE3o 03\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Capitais com maior E menor popula\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Capital com maior popula\\xE7\\xE3o: \", capitais.maior]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Capital com menor popula\\xE7\\xE3o: \", capitais.menor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Questao03, \"e0R3b3JUkFzV6fbfYCgKUBZC1RI=\");\n_c = Questao03;\nexport default Questao03;\nvar _c;\n$RefreshReg$(_c, \"Questao03\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Questao03","_s","capitais","setCapitais","menor","maior","fetchCapitais","response","fetch","ok","Error","data","json","orderData","filter","capital","sort","a","b","population","length","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mariana/Documentos/ufc 2024.1/web/estudoProva/web-atividades-2024.1/01-introducao/src/components/Prova/Questao03/questao03.js"],"sourcesContent":["import React  from \"react\";\nimport { useState, useEffect } from \"react\";\n\nconst Questao03 = () => {\n    // estado para armazenar as capitais\n    const [capitais, setCapitais] = useState({menor: '', maior: ''})\n\n    useEffect(() => {\n\n        const fetchCapitais = async () => {\n            try {\n                const response = await fetch(\"https://restcountries.com/v3.1/region/europe?fields=capital,population\")\n\n                if(!response.ok) throw new Error('Erro na requisição')\n\n                const data = await response.json();\n\n                //filtra países sem capital capital e organiza em ordem crescente\n                const orderData = data\n                    .filter(({capital}) => capital) //garante q país tenha uma capital\n                    .sort((a, b) => a.population - b.population) //ordena os países\n\n                //atualiza o estado com as capitais de menor e maior população\n                if(orderData.length > 0){\n                    setCapitais({\n                        menor: orderData[0].capital[0], //primeira posição após ordenas: menor\n                        maior: orderData[orderData.length - 1].capital[0], //última posi~]ao após ordenas : maior \n                    })\n                }\n                else{\n                    setCapitais({menor: 'Nenhuma', maior: 'Nenhuma'})\n                }\n            } catch (error) {\n                console.error('Erro ao buscar capitais')\n            }\n        }\n\n        //executa a busca de dados\n        fetchCapitais();\n\n        //aray vazio indica que o efeito será executado só uma vez \n    }, [])\n\n    return (\n        <div>\n            <h2>Questão 03</h2>\n            <h3>Capitais com maior E menor população</h3>\n            <p>Capital com maior população: {capitais.maior}</p>\n            <p>Capital com menor população: {capitais.menor}</p>\n        </div>\n    )\n}\n\nexport default Questao03;"],"mappings":";;AAAA,OAAOA,KAAK,MAAO,OAAO;AAC1B,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IAACQ,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAE,CAAC,CAAC;EAEhER,SAAS,CAAC,MAAM;IAEZ,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wEAAwE,CAAC;QAEtG,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;QAEtD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;QAElC;QACA,MAAMC,SAAS,GAAGF,IAAI,CACjBG,MAAM,CAAC,CAAC;UAACC;QAAO,CAAC,KAAKA,OAAO,CAAC,CAAC;QAAA,CAC/BC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,UAAU,GAAGD,CAAC,CAACC,UAAU,CAAC,EAAC;;QAEjD;QACA,IAAGN,SAAS,CAACO,MAAM,GAAG,CAAC,EAAC;UACpBjB,WAAW,CAAC;YACRC,KAAK,EAAES,SAAS,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC;YAAE;YAChCV,KAAK,EAAEQ,SAAS,CAACA,SAAS,CAACO,MAAM,GAAG,CAAC,CAAC,CAACL,OAAO,CAAC,CAAC,CAAC,CAAE;UACvD,CAAC,CAAC;QACN,CAAC,MACG;UACAZ,WAAW,CAAC;YAACC,KAAK,EAAE,SAAS;YAAEC,KAAK,EAAE;UAAS,CAAC,CAAC;QACrD;MACJ,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAC;MAC5C;IACJ,CAAC;;IAED;IACAf,aAAa,CAAC,CAAC;;IAEf;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB5B,OAAA;MAAAwB,QAAA,EAAI;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7C5B,OAAA;MAAAwB,QAAA,GAAG,qCAA6B,EAACrB,QAAQ,CAACG,KAAK;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpD5B,OAAA;MAAAwB,QAAA,GAAG,qCAA6B,EAACrB,QAAQ,CAACE,KAAK;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEd,CAAC;AAAA1B,EAAA,CAhDKD,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAkDf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}